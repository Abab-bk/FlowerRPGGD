
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using System.Text.Json;


namespace cfg.Items
{
public sealed partial class AffixTemplate : Luban.BeanBase
{
    public AffixTemplate(JsonElement _buf) 
    {
        Id = _buf.GetProperty("id").GetString();
        Name = _buf.GetProperty("name").GetString();
        TargetStatType = (Stats.StatType)_buf.GetProperty("target_stat_type").GetInt32();
        ValueType = (FlowerRpg.Stats.Modifiers.ModifierType)_buf.GetProperty("value_type").GetInt32();
        { var __json0 = _buf.GetProperty("value_range"); int _n0 = __json0.GetArrayLength(); ValueRange = new float[_n0]; int __index0=0; foreach(JsonElement __e0 in __json0.EnumerateArray()) { float __v0;  __v0 = __e0.GetSingle();  ValueRange[__index0++] = __v0; }   }
    }

    public static AffixTemplate DeserializeAffixTemplate(JsonElement _buf)
    {
        return new Items.AffixTemplate(_buf);
    }

    public readonly string Id;
    public readonly string Name;
    public readonly Stats.StatType TargetStatType;
    public readonly FlowerRpg.Stats.Modifiers.ModifierType ValueType;
    public readonly float[] ValueRange;
   
    public const int __ID__ = -475022212;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "targetStatType:" + TargetStatType + ","
        + "valueType:" + ValueType + ","
        + "valueRange:" + Luban.StringUtil.CollectionToString(ValueRange) + ","
        + "}";
    }
}

}

